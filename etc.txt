Изучение Git для новичков

1 git init - создает GIT репозиторий
2 git branch 'name' - создание ветки
3 git branch -a - показывает все созданные ветки
4 git branch -d 'name' - удаляет ветку 'name'
5 git status - проверить все изменения
6 git add '' - добавить файлы в локальный репозиторий
7 git checkout 'id or branch' - вернуться до определенного коммита по ID или названия ветки
8 git checkout master - вернуться на основную ветку
9 git checkout -b 'name' - создать новую ветку и сразу перейти на нее
10 git commit -m "'comment'" - добавить изменения в ветку с определенным комментарием
11 git merge 'name' - объединить основную (master) ветку с 'name'
12 git log - просмотреть все коммиты. Выход через q
13 git log --oneline - просмотреть все коммиты в линию
14 git reflog - показывает все изменения коммитов и веток
15 git revert 'ID' - возврат проекта к определенному по ID коммиту
16 git reset 'ID' - удаляет все коммиты начиная с ID
17 git reset 'ID' --hard - удаляет все коммиты начиная с ID и возвращает все файлы до данного ID
18 git remote add origin 'HTTPname' - соединяет с GitHub репозиторием
19 git push -u origin 'BranchName' - загружает ветку в GitHub репозиторий
20 git clone 'address' - копирует весь репозиторий
21 git pull - добавляет последнюю версию проекта в папку
22 git tag 'tagName' 'ID' - создает тег по ID. К нему можно будет обращаться вместо ID
23 git tag -n - показывает все теги с соответствующими комментариями
24 git tag -d 'tagName' - удаляет тег с tagName
25 git tag -a -m "'comment'" 'tagName' 'ID or brenchName' - создает тег с комментарием и подробными аннотациями

git log --pretty=format:"%h - %s : %ad [ %an ]" - показывает все коммиты в определенном формате: "ID - название : дата создания [автор]"

. - все файлы
*.ext - файлы с определенным расширением
name/ - файлы в определенной папке
name/**/ - файлы в подпапках папки name

В файл с расширением .gitignore прописываются через новую строку все игнорированные для GIT файлы
